--- avifile-0.7-0.7.45/lib/aviplay/aviplay.cpp~	2009-08-09 21:56:53.747962115 +0200
+++ avifile-0.7-0.7.45/lib/aviplay/aviplay.cpp	2009-08-09 21:57:08.641707611 +0200
@@ -242,7 +242,7 @@
 	//printf("VSTREAMTIME %f\n", m_pVideostream->GetTime());
 	// reading subtitles
 	avm::string fn = m_Filename;
-	char* p = strrchr(fn.c_str(), '.');
+	char* p = strrchr(const_cast<char*>(fn.c_str()), '.');
 	if (p)
             *p = 0;
 	InitSubtitles(m_Subfilename.size()
--- avifile-0.7-0.7.45/lib/common/Args.cpp~	2003-02-06 21:39:12.000000000 +0100
+++ avifile-0.7-0.7.45/lib/common/Args.cpp	2009-08-09 22:01:58.534594926 +0200
@@ -259,7 +259,7 @@
     }
     for (unsigned i = 0; i < arr.size(); i++)
     {
-	char* par = strchr(arr[i], '=');
+	char* par = strchr(const_cast<char*>(arr[i].c_str()), '=');
 	if (par)
 	{
 	    *par = 0;
@@ -335,7 +335,7 @@
 	    {
 		for (unsigned j = 1; j < arr.size(); j++)
 		{
-		    char* p = strchr(arr[j].c_str(), '=');
+		    char* p = strchr(const_cast<char*>(arr[j].c_str()), '=');
 		    int val = 0;
 		    bool valid = false;
 		    if (p)
--- avifile-0.7-0.7.45/lib/codeckeeper.cpp~	2004-03-10 14:27:38.000000000 +0100
+++ avifile-0.7-0.7.45/lib/codeckeeper.cpp	2009-08-09 22:04:00.798541516 +0200
@@ -143,7 +143,7 @@
     {
 	char plgn[100];
 	strcpy(plgn, "avm_codec_plugin_");
-	char* x = strrchr(name, '/');
+	char* x = strrchr(const_cast<char*>(name), '/');
 	strncat(plgn, x + 1, 50);
 	x = strchr(plgn, '.');
 	*x = 0;
--- avifile-0.7-0.7.45/player/playercontrol.cpp~	2009-08-09 21:47:17.971766684 +0200
+++ avifile-0.7-0.7.45/player/playercontrol.cpp	2009-08-09 22:05:23.045616464 +0200
@@ -764,7 +764,7 @@
 	return;
 
     avm::string path = RS("url", ".");
-    char* cut = strrchr(path.c_str(), '/');
+    char* cut = strrchr(const_cast<char*>(path.c_str()), '/');
     if (!cut)
 	path = "./";
 #if QT_VERSION <= 220
